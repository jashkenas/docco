{"version":3,"file":"format.js","sources":["format.litcoffee"],"names":[],"mappings":"AAAI,IAAA;;AAAA,CAAA,GAAc,OAAA,CAAQ,YAAR;;AACd,EAAA,GAAc,OAAA,CAAQ,UAAR;;AACd,IAAA,GAAc,OAAA,CAAQ,MAAR;;AACd,MAAA,GAAc,OAAA,CAAQ,QAAR;;AACd,SAAA,GAAc,OAAA,CAAQ,WAAR;;AACd,WAAA,GAAc,OAAA,CAAQ,cAAR;;AACd,IAAA,GAAc,OAAA,CAAQ,MAAR;;AACd,IAAA,GAAc,OAAA,CAAQ,MAAR;;AAMd,MAAM,CAAC,OAAP,GAAiB,MAAA,GAAS,SAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,MAA7B;AAIxB,MAAA;EAAA,aAAA,GACE;IAAA,WAAA,EAAa,IAAb;;EAEF,IAAG,MAAM,CAAC,MAAV;IACE,aAAA,GAAgB,MAAM,CAAC,OADzB;;EAGA,MAAM,CAAC,UAAP,CAAkB,aAAlB;EAMA,MAAM,CAAC,UAAP,CAAkB;IAChB,SAAA,EAAW,SAAC,IAAD,EAAO,IAAP;MACT,SAAA,OAAS,QAAQ,CAAC;MAElB,IAAG,WAAW,CAAC,WAAZ,CAAwB,IAAxB,CAAH;eACE,WAAW,CAAC,SAAZ,CAAsB,IAAtB,EAA4B,IAA5B,CAAiC,CAAC,MADpC;OAAA,MAAA;QAGE,OAAO,CAAC,IAAR,CAAa,8DAAA,GAA+D,IAA/D,GAAoE,OAApE,GAA2E,MAAxF;eACA,KAJF;;IAHS,CADK;GAAlB;AAWA;OAAA,kDAAA;;IACE,IAAG,QAAQ,CAAC,IAAZ;MACE,OAAO,CAAC,QAAR,GAAmB,OAAO,CAAC,SAD7B;KAAA,MAAA;MAGE,IAAA,GAAO,WAAW,CAAC,SAAZ,CAAsB,QAAQ,CAAC,IAA/B,EAAqC,OAAO,CAAC,QAA7C,CAAsD,CAAC;MAC9D,IAAA,GAAO,IAAI,CAAC,OAAL,CAAa,MAAb,EAAqB,EAArB;MACP,OAAO,CAAC,QAAR,GAAmB,8BAAA,GAA+B,IAA/B,GAAoC,eALzD;;iBAMA,OAAO,CAAC,QAAR,GAAmB,MAAA,CAAO,OAAO,CAAC,QAAf;AAPrB;;AA3BwB","sourcesContent":["    _           = require 'underscore'\n    fs          = require 'fs-extra'\n    path        = require 'path'\n    marked      = require 'marked'\n    commander   = require 'commander'\n    highlightjs = require 'highlight.js'\n    path        = require 'path'\n    glob        = require 'glob'\n\nTo **format** and highlight the now-parsed sections of code, we use **Highlight.js**\nover stdio, and run the text of their corresponding comments through\n**Markdown**, using [Marked](https://github.com/chjj/marked).\n\n    module.exports = format = (source, language, sections, config) ->\n\nPass any user defined options to Marked if specified via command line option\n\n      markedOptions =\n        smartypants: true\n\n      if config.marked\n        markedOptions = config.marked\n\n      marked.setOptions markedOptions\n\nTell Marked how to highlight code blocks within comments, treating that code\nas either the language specified in the code block or the language of the file\nif not specified.\n\n      marked.setOptions {\n        highlight: (code, lang) ->\n          lang or= language.name\n\n          if highlightjs.getLanguage(lang)\n            highlightjs.highlight(lang, code).value\n          else\n            console.warn \"docco: couldn't highlight code block with unknown language '#{lang}' in #{source}\"\n            code\n      }\n\n      for section, i in sections\n        if language.html\n          section.codeHtml = section.codeText\n        else\n          code = highlightjs.highlight(language.name, section.codeText).value\n          code = code.replace(/\\s+$/, '')\n          section.codeHtml = \"<div class='highlight'><pre>#{code}</pre></div>\"\n        section.docsHtml = marked(section.docsText)\n\n"]}