{"version":3,"file":"getLanguage.js","sources":["getLanguage.litcoffee"],"names":[],"mappings":"AACI,IAAA;;AAAA,IAAA,GAAO,OAAA,CAAQ,MAAR;;AAKP,WAAA,GAAc,SAAC,MAAD,EAAS,SAAT,EAAoB,SAApB;AACZ,MAAA;EAAA,GAAA,GAAO,SAAA,IAAa,IAAI,CAAC,OAAL,CAAa,MAAb,CAAb,IAAqC,IAAI,CAAC,QAAL,CAAc,MAAd;EAC5C,IAAA,GAAO,SAAU,CAAA,GAAA;EACjB,IAAG,IAAA,IAAS,IAAI,CAAC,IAAL,KAAa,UAAzB;IACE,OAAA,GAAU,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,QAAL,CAAc,MAAd,EAAsB,GAAtB,CAAb;IACV,IAAG,OAAA,IAAY,CAAA,QAAA,GAAW,SAAU,CAAA,OAAA,CAArB,CAAf;MACE,IAAA,GAAO,CAAC,CAAC,MAAF,CAAS,EAAT,EAAa,QAAb,EAAuB;QAAC,QAAA,EAAU,IAAX;OAAvB,EADT;KAFF;;SAIA;AAPY;;AASd,MAAM,CAAC,OAAP,GAAiB","sourcesContent":["\n    path = require 'path'\n\nA function to get the current language we're documenting, based on the\nfile extension. Detect and tag \"literate\" `.ext.md` variants.\n\n    getLanguage = (source, languages, extension) ->\n      ext  = extension or path.extname(source) or path.basename(source)\n      lang = languages[ext]\n      if lang and lang.name is 'markdown'\n        codeExt = path.extname(path.basename(source, ext))\n        if codeExt and codeLang = languages[codeExt]\n          lang = _.extend {}, codeLang, {literate: yes}\n      lang\n\n    module.exports = getLanguage"]}