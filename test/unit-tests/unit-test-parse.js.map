{"version":3,"file":"unit-test-parse.js","sources":["unit-test-parse.litcoffee"],"names":[],"mappings":"AAEI,IAAA;;AAAA,MAAqB,OAAA,CAAQ,MAAR,CAArB,EAAE,mBAAF,EAAU;;AAA4B,MAAA,CAAA;;AACtC,EAAA,GAAK,OAAA,CAAQ,UAAR;;AACL,KAAA,GAAQ,OAAA,CAAQ,iBAAR;;AACR,aAAA,GAAgB,OAAA,CAAQ,yBAAR;;AAEhB,QAAA,CAAS,aAAT,EAAwB,SAAA;EAEtB,EAAA,CAAG,6CAAH,EAAkD,SAAA;AAEhD,QAAA;IAAA,IAAA,GAAO,EAAE,CAAC,YAAH,CAAgB,SAAA,GAAU,2BAA1B,CAAsD,CAAC,QAAvD,CAAA;IACP,MAAA,GAAS;IACT,MAAA,GACE;MAAA,MAAA,EAAY,UAAZ;MACA,MAAA,EAAY,MADZ;MAEA,QAAA,EAAY,IAFZ;MAGA,GAAA,EAAY,IAHZ;MAIA,SAAA,EAAY,IAJZ;MAKA,SAAA,EAAY,EALZ;MAMA,MAAA,EAAY,IANZ;MAOA,KAAA,EAAY,aAPZ;MAQA,IAAA,EAAW,KARX;MASA,OAAA,EAAS,KATT;;IAUF,SAAA,GAAY;MAAC;QAAC,MAAA,EAAO,cAAR;QAAuB,QAAA,EAAS,GAAhC;QAAoC,gBAAA,EAAiB,EAArD;QAAwD,eAAA,EAAgB,EAAxE;OAAD;;IACZ,SAAA,GAAY,aAAA,CAAc,SAAd;IAEZ,QAAA,GAAW,KAAA,CAAM,MAAN,EAAc,SAAU,CAAA,CAAA,CAAxB,EAA4B,IAA5B,EAAkC,MAAlC;IAEX,QAAS,CAAA,CAAA,CAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAA/B,CAAqC,eAArC;IACA,QAAS,CAAA,CAAA,CAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAA/B,CAAqC,oCAArC;IAEA,QAAS,CAAA,CAAA,CAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAA/B,CAAqC,eAArC;IACA,QAAS,CAAA,CAAA,CAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAA/B,CAAqC,8BAArC;IAEA,QAAS,CAAA,CAAA,CAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAA/B,CAAqC,cAArC;IACA,QAAS,CAAA,CAAA,CAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAA/B,CAAqC,2BAArC;EA3BgD,CAAlD;AAFsB,CAAxB","sourcesContent":["# This tests if parse is working correctly.\n\n    { assert, should } = require('chai'); should()\n    fs = require 'fs-extra'\n    parse = require '../../src/parse'\n    buildMatchers = require '../../src/buildMatchers'\n\n    describe 'docco parse', () ->\n\n      it 'parse a file into sections of code and text', () ->\n\n        code = fs.readFileSync(__dirname+'/fakes/fake_coffee.coffee').toString()\n        source = 'fakes/fake_coffee.coffee'\n        config =\n          layout:     'parallel'\n          output:     'docs'\n          template:   null\n          css:        null\n          extension:  null\n          languages:  {}\n          marked:     null\n          setup:      '.docco.json'\n          help:      false\n          flatten: false\n        languages = [{\"name\":\"coffeescript\",\"symbol\":\"#\",\"commentMatcher\":{},\"commentFilter\":{}}]\n        languages = buildMatchers languages\n\n        sections = parse(source, languages[0], code, config)\n\n        sections[0].docsText.should.be.equal(\"Assignment:\\n\")\n        sections[0].codeText.should.be.equal(\"number   = 42\\nopposite = true\\n\\n\")\n\n        sections[1].docsText.should.be.equal(\"Conditions:\\n\")\n        sections[1].codeText.should.be.equal(\"number = -42 if opposite\\n\\n\")\n\n        sections[2].docsText.should.be.equal(\"Functions:\\n\")\n        sections[2].codeText.should.be.equal(\"square = (x) -> x * x\\n\\n\")\n        return\n      return"]}