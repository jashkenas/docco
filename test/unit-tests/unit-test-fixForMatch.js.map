{"version":3,"file":"unit-test-fixForMatch.js","sources":["unit-test-fixForMatch.litcoffee"],"names":[],"mappings":"AAEI,IAAA;;AAAA,IAAA,GAAO,OAAA,CAAQ,MAAR;;AACP,MAAA,GAAS,IAAI,CAAC;;AACd,MAAA,GAAS,IAAI,CAAC,MAAL,CAAA;;AACT,MAAA,GAAS,IAAI,CAAC;;AAEd,WAAA,GAAc,OAAA,CAAQ,qBAAR;;AAEd,QAAA,CAAS,eAAT,EAA0B,SAAA;AAExB,MAAA;EAAA,WAAA,GAAc;SACd,EAAA,CAAG,+BAAH,EAAoC,SAAA;AAClC,QAAA;IAAA,MAAA,GAAS;MACP,OAAA,EAAS,MADF;MAEP,MAAA,EAAQ;QACN,OAAA,EAAS,MADH;OAFD;MAMP,MAAA,EAAQ;QAAC;UAAE,GAAA,EAAK;YAAC,EAAA,EAAI,CAAL;WAAP;SAAD,EAAiB;UAAE,GAAA,EAAK;YAAC,EAAA,EAAI,CAAL;WAAP;SAAjB;OAND;MAOP,QAAA,EAAU,CAPH;MAQP,WAAA,EAAa,CARN;;IAUT,MAAA,GAAS,WAAA,CAAY,MAAZ,EAAmB,CAAC,SAAD,EAAY,UAAZ,EAAwB,aAAxB,EAAuC,IAAvC,CAAnB;IACT,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,KAAzB,CAA+B,WAA/B;IACA,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAA1B,CAAgC,WAAhC;IACA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,KAA7B,CAAmC,WAAnC;IACA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,KAAhC,CAAsC,WAAtC;IACA,MAAM,CAAC,MAAO,CAAA,CAAA,CAAE,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAlC,CAAwC,WAAxC;IACA,MAAM,CAAC,MAAO,CAAA,CAAA,CAAE,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAlC,CAAwC,WAAxC;EAjBkC,CAApC;AAHwB,CAA1B","sourcesContent":["#\n\n    chai = require('chai')\n    expect = chai.expect\n    should = chai.should()\n    assert = chai.assert\n\n    fixForMatch = require('./utils/fixForMatch')\n\n    describe 'fix for match', () ->\n\n      replacement = \"force matched\"\n      it 'zeros out particular fields..', () ->\n        object = {\n          thingId: \"1234\"\n          thing1: {\n            thingId: \"1234\"\n\n          }\n          thing2: [{ tin: {id: 1}},{ tin: {id: 2}}]\n          leadTime: 3\n          transitTime: 3\n        }\n        result = fixForMatch(object,['thingId', 'leadTime', 'transitTime', 'id'])\n        result.thingId.should.be.equal(replacement)\n        result.leadTime.should.be.equal(replacement)\n        result.transitTime.should.be.equal(replacement)\n        result.thing1.thingId.should.be.equal(replacement)\n        result.thing2[0].tin.id.should.be.equal(replacement)\n        result.thing2[1].tin.id.should.be.equal(replacement)\n\n        return\n"]}