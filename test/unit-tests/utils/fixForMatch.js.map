{"version":3,"file":"fixForMatch.js","sources":["utils/fixForMatch.litcoffee"],"names":[],"mappings":"AAII,IAAA,0CAAA;EAAA;;AAAA,WAAA,GAAc,OAAA,CAAQ,eAAR;;AACd,YAAA,GAAe,OAAA,CAAQ,gBAAR;;AACf,eAAA,GAAkB,SAAC,QAAD,EAAW,YAAX;AAChB,MAAA;EAAA,MAAA,GAAS;AACT,OAAA,aAAA;;IACE,IAAG,aAAK,YAAL,EAAA,CAAA,MAAH;MACE,MAAO,CAAA,CAAA,CAAP,GAAY,gBADd;KAAA,MAEK,IAAG,YAAA,CAAa,CAAb,CAAH;MACH,MAAO,CAAA,CAAA,CAAP,GAAY,eAAA,CAAgB,CAAhB,EAAmB,YAAnB,EADT;KAAA,MAEA,IAAG,WAAA,CAAY,CAAZ,CAAH;AACH,WAAA,2CAAA;;QACE,CAAE,CAAA,CAAA,CAAF,GAAO,eAAA,CAAgB,CAAhB,EAAmB,YAAnB;AADT;MAEA,MAAO,CAAA,CAAA,CAAP,GAAY,EAHT;KAAA,MAAA;MAKH,MAAO,CAAA,CAAA,CAAP,GAAY,EALT;;AALP;AAWA,SAAO;AAbS;;AAelB,MAAM,CAAC,OAAP,GAAiB","sourcesContent":["# For fakes, certain fields change depending on the root directory the\n# test is run within. For those fields it is useful to \"zero\" them out\n# to the same value so that the other fields can be tested for equality.\n\n    typeIsArray = require('./typeIsArray')\n    typeIsObject = require('./typeIsObject')\n    fixForDeepEqual = (response, valuesToFake) ->\n      result = {}\n      for k,v of response\n        if k in valuesToFake\n          result[k] = \"force matched\"\n        else if typeIsObject(v)\n          result[k] = fixForDeepEqual(v, valuesToFake)\n        else if typeIsArray(v)\n          for i,l in v\n            v[i] = fixForDeepEqual(l, valuesToFake)\n          result[k] = v\n        else\n          result[k] = v\n      return result\n\n    module.exports = fixForDeepEqual"]}