{"version":3,"file":"unit-test-getInformationOnFiles.js","sources":["unit-test-getInformationOnFiles.litcoffee"],"names":[],"mappings":"AAEI,IAAA;;AAAA,MAAqB,OAAA,CAAQ,MAAR,CAArB,EAAE,mBAAF,EAAU;;AAA4B,MAAA,CAAA;;AACtC,aAAA,GAAgB,OAAA,CAAQ,yBAAR;;AAEhB,QAAA,CAAS,6BAAT,EAAwC,SAAA;AACtC,MAAA;EAAE,YAAc,OAAA,CAAQ,aAAR;EAChB,qBAAA,GAAwB,OAAA,CAAQ,iCAAR;EAExB,EAAA,CAAG,sDAAH,EAA2D,SAAA;AACzD,QAAA;IAAA,sBAAA,GAAyB,OAAA,CAAQ,uCAAR;IACzB,MAAA,GAAS;IACT,MAAA,GACE;MAAA,MAAA,EAAQ,MAAR;MACA,IAAA,EAAM,UADN;MAEA,GAAA,EAAK,WAFL;MAGA,OAAA,EAAS,CACP,wBADO,EAEP,WAFO,EAGP,yBAHO,EAIP,kCAJO,CAHT;;IASF,MAAM,CAAC,SAAP,GAAmB,aAAA,CAAc,SAAd;IAEnB,kBAAA,GAAqB,qBAAA,CAAsB,MAAtB;IACrB,MAAM,CAAC,SAAP,CAAiB,kBAAjB,EAAqC,sBAArC;EAhByD,CAA3D;EAmBA,EAAA,CAAG,oDAAH,EAAyD,SAAA;AACvD,QAAA;IAAA,sBAAA,GAAyB,OAAA,CAAQ,qCAAR;IACzB,MAAA,GAAS;IACT,MAAA,GACE;MAAA,OAAA,EAAS,IAAT;MACA,SAAA,EAAU,SADV;MAEA,MAAA,EAAQ,MAFR;MAGA,IAAA,EAAM,UAHN;MAIA,GAAA,EAAK,WAJL;MAKA,OAAA,EAAS,CACP,wBADO,EAEP,WAFO,EAGP,yBAHO,EAIP,kCAJO,CALT;MAWA,OAAA,EAAS,IAXT;;IAYF,kBAAA,GAAqB,qBAAA,CAAsB,MAAtB;IACrB,MAAM,CAAC,SAAP,CAAiB,kBAAjB,EAAqC,sBAArC;EAjBuD,CAAzD;AAvBsC,CAAxC","sourcesContent":["# This tests if getDestinations is working correctly.\n\n    { assert, should } = require('chai'); should()\n    buildMatchers = require '../../src/buildMatchers'\n\n    describe 'docco getInformationOnFiles', () ->\n      { languages } = require('../../docco')\n      getInformationOnFiles = require('../../src/getInformationOnFiles')\n\n      it 'calculates file information with unflattened request', () ->\n        informationOnFilesFake = require './fakes/informationOnFilesUnFlattened'\n        source = \"src/fake_coffee.coffee\"\n        config =\n          output: 'docs'\n          root: '/Project'\n          css: 'docco.css'\n          sources: [\n            \"src/fake_coffee.coffee\"\n            \"README.md\"\n            \"images/fluffybunny1.jpg\"\n            \"src/lib/fake_litcoffee.litcoffee\"\n          ]\n        config.languages = buildMatchers languages\n\n        informationOnFiles = getInformationOnFiles(config)\n        assert.deepEqual(informationOnFiles, informationOnFilesFake)\n        return\n\n      it 'calculates file information with flattened request', () ->\n        informationOnFilesFake = require './fakes/informationOnFilesFlattened'\n        source = \"src/fake_coffee.coffee\"\n        config =\n          flatten: true\n          languages:languages\n          output: 'docs'\n          root: '/Project'\n          css: 'docco.css'\n          sources: [\n            \"src/fake_coffee.coffee\"\n            \"README.md\"\n            \"images/fluffybunny1.jpg\"\n            \"src/lib/fake_litcoffee.litcoffee\"\n          ]\n          flatten: true\n        informationOnFiles = getInformationOnFiles(config)\n        assert.deepEqual(informationOnFiles, informationOnFilesFake)\n        return\n      return"]}